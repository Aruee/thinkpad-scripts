#!/bin/bash

# Script orignally from http://forum.thinkpads.com/viewtopic.php?p=676101#p676101.
# Changes Copyright Â© 2012 Martin Ueding <dev@martin-ueding.de>

# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation, either version 2 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.

set -e

internal=LVDS1

# Find the line in "xrandr -q --verbose" output that contains current screen
# orientation and "strip" out current orientation.
rotation="$(xrandr -q --verbose | grep 'connected' | grep "$internal" | egrep -o  '\) (normal|left|inverted|right) \(' | egrep -o '(normal|left|inverted|right)')"

echo "Current status is $rotation."

# If the user specified a rotation, set it to that. If not, use left or default
# orientation.
if [[ -n "$1" ]]
then
	if [[ "$1" = "$rotation" ]]
	then
		echo "You try to rotate into the direction it it, reverting to normal."
		setto=normal
	else
		setto="$1"
		echo "User chose to set to $setto."
	fi
else
	case "$rotation" in
		normal)
			setto=right
			echo "Using default, setting to $setto."
			;;
		*)
			setto=normal
			echo "Using default, reverting to normal."
	esac
fi

# Perform the actual rotation.
case "$setto" in
	none|normal)
		xrandr_rotation=normal
		wacom_rotation=none
		;;
	cw|right)
		xrandr_rotation=right
		wacom_rotation=cw
		;;
	half|inverted|flip)
		xrandr_rotation=right
		wacom_rotation=half
		;;
	ccw|left)
		xrandr_rotation=left
		wacom_rotation=ccw
		;;
	*)
		echo "You specified a direction that is not known. Try either normal, right, flip or left."
		exit 2
esac

xrandr --output "$internal" --rotate "$xrandr_rotation"

echo "Rotating Wacom devices to $wacom_rotation."

for device in "Wacom ISDv4 E6 Pen stylus" "Wacom ISDv4 E6 Finger touch" "Wacom ISDv4 E6 Pen eraser"
do
	xsetwacom set "$device" rotate "$wacom_rotation"
done

# Start the virtual keyboard ``kvkbd``, if it is installed.
if type kvkbd
then
	if [[ "$setto" = "normal" ]]
	then
		# So the user reverts back to normal. Kill the virtual keyboard (if it
		# is running), since it does not make any sense to use that any more.
		if pgrep kvkbd
		then
			killall kvkbd
		fi
	else
		# The user rotated the screen. Start the virtual keyboard since he
		# might need it.
		kvkbd
	fi
fi


# Enable and disable the Trackpoint. First, find the id of the trackpoint.
trackpoint_id="$(xinput list | grep TrackPoint | grep --only-matching -P 'id=(\d+)' | cut -c 4-)"
touchpad_id="$(xinput list | grep TouchPad | grep --only-matching -P 'id=(\d+)' | cut -c 4-)"

# Set the mode to which the input devices should be set.
if [[ "$setto" = "normal" ]]
then
	input_to=1
else
	input_to=0
fi

for device in "$trackpoint_id" "$touchpad_id"
do
	echo "Toggling input device $device to $input_to."
	xinput set-prop "$device" "Device Enabled" "$input_to"
done
