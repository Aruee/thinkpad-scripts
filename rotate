#!/bin/bash

# Script orignally from http://forum.thinkpads.com/viewtopic.php?p=676101#p676101.
# Changes Copyright Â© 2012 Martin Ueding <dev@martin-ueding.de>

# Find the line in "xrandr -q --verbose" output that contains current screen
# orientation and "strip" out current orientation.

rotation="$(xrandr -q --verbose | grep 'connected' | egrep -o  '\) (normal|left|inverted|right) \(' | egrep -o '(normal|left|inverted|right)')"

# Using current screen orientation proceed to rotate screen and input tools.

# If the user specified a rotation, set it to that. If not, use left or default
# orientation.
if [[ -n "$1" ]]
then
	setto="$1"
	echo "User chose to set to $setto."
else
	case "$rotation" in
		normal)
			setto=right
			echo "Using default, setting to $setto."
			;;
		*)
			setto=normal
			echo "Using default, reverting to normal."
	esac
fi

rotate_do() {
	for device in "Wacom ISDv4 E6 Pen stylus" "Wacom ISDv4 E6 Finger touch" "Wacom ISDv4 E6 Pen eraser"
	do
		xsetwacom set "$device" rotate "$1"
	done
}

# Perform the actual rotation.
case "$setto" in
	normal)
		xrandr -o normal
		rotate_do none
		;;
	right)
		xrandr -o right
		rotate_do cw
		;;
	flip)
		xrandr -o inverted
		rotate_do half
		;;
	left)
		xrandr -o left
		rotate_do ccw
		;;
esac

# Enable and disable the Trackpoint.
# First, find the id of the trackpoint.
id=$(xinput list | grep TrackPoint | grep --only-matching -P 'id=(\d+)' | cut -c 4-)

rotate_toggle() {
	xinput set-prop $1 "Device Enabled" "$2"
	echo "Toggling input device $1 to $2."
}

case "$setto" in
	normal)
		rotate_toggle "$id" 1
		;;
	*)
		rotate_toggle "$id" 0
		;;
esac
